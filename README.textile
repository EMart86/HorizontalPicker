!https://dl.dropboxusercontent.com/u/9611843/HorizontalPickerView_ShowCase.png!

h2. HorizontalPicker

HorizontalPickerView is a lean variant of UIPickerView and meant to be used for small data sets and where picker space is limited.
Though you can modify the width of the picker without restrictions the height should stay near 44px.

h3. Usage

HorizontalPicker follows the UIPicker's delegate and dataSource protocols.
Create a HorizontalPicker programmatically using

<pre><code>
	HorizontalPickerView *pView = [HorizontalPickerView alloc] initWithFrame:CGRectMake(0, 0, 320, 44)];
	pView.dataSource            = self;
	pView.delegate              = self;
</code></pre>

or include a normal UIView in your Storyboard file, go to the identity inspector
and change the Class to HorizontalPickerView. Make sure you connect the dataSource and delegate
outlets.

NOTE: If you are using HorizontalPickerView only in your Storybord you might experience 
linker errors. In that case include the following code somewhere inside your code.
<pre><code>
	[HorizontalPickerView class];
</code></pre>
This makes sure the linker doesn't optimise the HorizontalPickerView away.

Included in the HorizontalPickerView workspace is the HorizontalPickerView framework project
and the HPDemo project.
The HPDemo project is just for demonstration purposes to show the usage. Its a universal
project and shows how to deal with different dataSource objects.

h3. Installation

Include the HorizontalPickerView.framework into your project and make sure you include the header file
<pre><code>
#include <HorizontalPickerView/HorizontalPickerView.h>
</code></pre>

NOTE: Make sure you have the QuartzCore framework added to your project!

h3. Versioning

Versioning for HorizontalPicker follows the Semantic Version Specification found on http://semver.org.

New in version 1.1.0
- support for cocoapods
- choose iOS7 like style

h3. License

Usage is provided under the [MIT licence](http://http://opensource.org/licenses/MIT). See LICENCE for the full details.
